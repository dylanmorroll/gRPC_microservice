# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import electricity_data_pb2 as electricity__data__pb2


class ElectrictyDataStub(object):
  """The definition of the server for returning data information
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GetData = channel.unary_unary(
        '/gRPC_microservice.ElectrictyData/GetData',
        request_serializer=electricity__data__pb2.RequestInfo.SerializeToString,
        response_deserializer=electricity__data__pb2.Data.FromString,
        )


class ElectrictyDataServicer(object):
  """The definition of the server for returning data information
  """

  def GetData(self, request, context):
    """Return the information
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ElectrictyDataServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GetData': grpc.unary_unary_rpc_method_handler(
          servicer.GetData,
          request_deserializer=electricity__data__pb2.RequestInfo.FromString,
          response_serializer=electricity__data__pb2.Data.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'gRPC_microservice.ElectrictyData', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
